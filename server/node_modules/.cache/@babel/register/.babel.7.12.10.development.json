{
  "{\"sourceRoot\":\"C:\\\\Academy\\\\AWD\\\\exam\\\\server\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Academy\\\\AWD\\\\exam\\\\server\",\"filename\":\"C:\\\\Academy\\\\AWD\\\\exam\\\\server\\\\src\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Academy\\\\AWD\\\\exam\\\\server\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Academy\\AWD\\exam\\server\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Academy\\AWD\\exam\\server",
      "filename": "C:\\Academy\\AWD\\exam\\server\\src\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Academy\\AWD\\exam\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Academy\\AWD\\exam\\server\\src\\server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Academy\\AWD\\exam\\server\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Academy\\AWD\\exam\\server\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import { ApolloServer, gql } from 'apollo-server-express';\nimport express from 'express';\nconst typeDefs = gql`\ntype Query{\n    hello: String!\n}\n`;\nconst resolvers = {\n  Query: {\n    hello: () => \"Hello there\"\n  }\n};\nconst app = express();\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers\n});\nserver.applyMiddleware({\n  app\n});\napp.use((req, res) => {\n  res.status(200);\n  res.send('Hello!');\n  res.end();\n});\napp.listen({\n  port: 4000\n}, () => console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJBcG9sbG9TZXJ2ZXIiLCJncWwiLCJleHByZXNzIiwidHlwZURlZnMiLCJyZXNvbHZlcnMiLCJRdWVyeSIsImhlbGxvIiwiYXBwIiwic2VydmVyIiwiYXBwbHlNaWRkbGV3YXJlIiwidXNlIiwicmVxIiwicmVzIiwic3RhdHVzIiwic2VuZCIsImVuZCIsImxpc3RlbiIsInBvcnQiLCJjb25zb2xlIiwibG9nIiwiZ3JhcGhxbFBhdGgiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVVBLFlBQVYsRUFBd0JDLEdBQXhCLFFBQW1DLHVCQUFuQztBQUNBLE9BQVFDLE9BQVIsTUFBc0IsU0FBdEI7QUFJQSxNQUFNQyxRQUFRLEdBQUdGLEdBQUk7QUFDckI7QUFDQTtBQUNBO0FBQ0EsQ0FKQTtBQU9BLE1BQU1HLFNBQVMsR0FBRztBQUNkQyxFQUFBQSxLQUFLLEVBQUU7QUFDSEMsSUFBQUEsS0FBSyxFQUFFLE1BQU07QUFEVjtBQURPLENBQWxCO0FBTUEsTUFBTUMsR0FBRyxHQUFHTCxPQUFPLEVBQW5CO0FBQ0EsTUFBTU0sTUFBTSxHQUFHLElBQUlSLFlBQUosQ0FBaUI7QUFDOUJHLEVBQUFBLFFBRDhCO0FBRTlCQyxFQUFBQTtBQUY4QixDQUFqQixDQUFmO0FBS0FJLE1BQU0sQ0FBQ0MsZUFBUCxDQUF1QjtBQUFFRixFQUFBQTtBQUFGLENBQXZCO0FBRUFBLEdBQUcsQ0FBQ0csR0FBSixDQUFRLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3BCQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYO0FBQ0FELEVBQUFBLEdBQUcsQ0FBQ0UsSUFBSixDQUFTLFFBQVQ7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRyxHQUFKO0FBQ0QsQ0FKRDtBQU1BUixHQUFHLENBQUNTLE1BQUosQ0FBVztBQUFFQyxFQUFBQSxJQUFJLEVBQUU7QUFBUixDQUFYLEVBQTJCLE1BQ3pCQyxPQUFPLENBQUNDLEdBQVIsQ0FBYSwyQ0FBMENYLE1BQU0sQ0FBQ1ksV0FBWSxFQUExRSxDQURGIiwic291cmNlUm9vdCI6IkM6XFxBY2FkZW15XFxBV0RcXGV4YW1cXHNlcnZlclxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgIHsgQXBvbGxvU2VydmVyLCBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnO1xyXG5pbXBvcnQgIGV4cHJlc3MgIGZyb20gJ2V4cHJlc3MnO1xyXG5cclxuXHJcblxyXG5jb25zdCB0eXBlRGVmcyA9IGdxbGBcclxudHlwZSBRdWVyeXtcclxuICAgIGhlbGxvOiBTdHJpbmchXHJcbn1cclxuYDtcclxuXHJcblxyXG5jb25zdCByZXNvbHZlcnMgPSB7XHJcbiAgICBRdWVyeToge1xyXG4gICAgICAgIGhlbGxvOiAoKSA9PiBcIkhlbGxvIHRoZXJlXCJcclxuICAgIH1cclxufVxyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBzZXJ2ZXIgPSBuZXcgQXBvbGxvU2VydmVyKHtcclxuICB0eXBlRGVmcyxcclxuICByZXNvbHZlcnMsXHJcbn0pO1xyXG5cclxuc2VydmVyLmFwcGx5TWlkZGxld2FyZSh7IGFwcCB9KTtcclxuXHJcbmFwcC51c2UoKHJlcSwgcmVzKSA9PiB7XHJcbiAgcmVzLnN0YXR1cygyMDApO1xyXG4gIHJlcy5zZW5kKCdIZWxsbyEnKTtcclxuICByZXMuZW5kKCk7XHJcbn0pO1xyXG5cclxuYXBwLmxpc3Rlbih7IHBvcnQ6IDQwMDAgfSwgKCkgPT5cclxuICBjb25zb2xlLmxvZyhg8J+agCBTZXJ2ZXIgcmVhZHkgYXQgaHR0cDovL2xvY2FsaG9zdDo0MDAwJHtzZXJ2ZXIuZ3JhcGhxbFBhdGh9YClcclxuKSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "ApolloServer",
        "gql",
        "express",
        "typeDefs",
        "resolvers",
        "Query",
        "hello",
        "app",
        "server",
        "applyMiddleware",
        "use",
        "req",
        "res",
        "status",
        "send",
        "end",
        "listen",
        "port",
        "console",
        "log",
        "graphqlPath"
      ],
      "mappings": "AAAA,SAAUA,YAAV,EAAwBC,GAAxB,QAAmC,uBAAnC;AACA,OAAQC,OAAR,MAAsB,SAAtB;AAIA,MAAMC,QAAQ,GAAGF,GAAI;AACrB;AACA;AACA;AACA,CAJA;AAOA,MAAMG,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,MAAM;AADV;AADO,CAAlB;AAMA,MAAMC,GAAG,GAAGL,OAAO,EAAnB;AACA,MAAMM,MAAM,GAAG,IAAIR,YAAJ,CAAiB;AAC9BG,EAAAA,QAD8B;AAE9BC,EAAAA;AAF8B,CAAjB,CAAf;AAKAI,MAAM,CAACC,eAAP,CAAuB;AAAEF,EAAAA;AAAF,CAAvB;AAEAA,GAAG,CAACG,GAAJ,CAAQ,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX;AACAD,EAAAA,GAAG,CAACE,IAAJ,CAAS,QAAT;AACAF,EAAAA,GAAG,CAACG,GAAJ;AACD,CAJD;AAMAR,GAAG,CAACS,MAAJ,CAAW;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAX,EAA2B,MACzBC,OAAO,CAACC,GAAR,CAAa,2CAA0CX,MAAM,CAACY,WAAY,EAA1E,CADF",
      "sourceRoot": "C:\\Academy\\AWD\\exam\\server\\src\\",
      "sourcesContent": [
        "import  { ApolloServer, gql } from 'apollo-server-express';\r\nimport  express  from 'express';\r\n\r\n\r\n\r\nconst typeDefs = gql`\r\ntype Query{\r\n    hello: String!\r\n}\r\n`;\r\n\r\n\r\nconst resolvers = {\r\n    Query: {\r\n        hello: () => \"Hello there\"\r\n    }\r\n}\r\n\r\nconst app = express();\r\nconst server = new ApolloServer({\r\n  typeDefs,\r\n  resolvers,\r\n});\r\n\r\nserver.applyMiddleware({ app });\r\n\r\napp.use((req, res) => {\r\n  res.status(200);\r\n  res.send('Hello!');\r\n  res.end();\r\n});\r\n\r\napp.listen({ port: 4000 }, () =>\r\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\r\n)"
      ]
    },
    "sourceType": "module",
    "mtime": 1608157841119
  }
}